#!/bin/bash
set -e

fdr0=/scratch/wd554/patchV1
res_fdr=$fdr0 # stimulus, V1-static and LGN-static files
in_fdr=$fdr0 # inputFolder in cfg
data_fdr=$fdr0 # outputFolder in cfg

fitTC=True
nOri=6
TF=8
SF=40
op=test-s${SF}t${TF}
lgn=b_4_20-test
v1=replay

fig_fdr=${fdr0}/${op} # figures and configs
v1_cfg=$v1.cfg
lgn_cfg=LGN_V1.cfg
collectMeanDataOnly=False
redraw=False

plotTConly=$1
echo $plotTConly

if [ "$plotTConly" = True ]; then
	fitDataReady=$2
else
	plotOnly=$2
	fitDataReady=$3
	if [ -z "$fitDataReady" ]; 
	then
		fitDataReady=False
	fi
fi

if [ -d "$fig_fdr" ]
then
	echo overwrite contents in $fig_fdr
else
	mkdir $fig_fdr	
fi

cp patchTC ${fig_fdr}/patchTC_${op}.bak

jobList=""
export redraw
export plotOnly
export nOri
export TF
export fdr0
export res_fdr
export data_fdr
export fig_fdr
export op
export lgn
export v1
export fitTC
export collectMeanDataOnly
export fitDataReady 

if [ "$plotTConly" = False ]; then
	if [ "$plotOnly" = False ]; then
		cp ori.cfg ${op}-ori_1.cfg
		cp ${op}-ori_1.cfg ${op}-ori_2.cfg
		mv ${op}-ori_1.cfg ${fdr0}
	fi
	cp $lgn_cfg ${fig_fdr}/${lgn}_cfg.bak 
	cp $v1_cfg ${fig_fdr}/${v1}_cfg.bak
	for ori in $( seq 1 $nOri )
	do
		export ori
		if [ "$plotOnly" = True ]; then
			jobID=`sbatch --export=ALL ori_cpu.slurm`
		else
			jobID=`sbatch --export=ALL ori_gpu.slurm`
			if [ "${ori}" -lt "${nOri}" ]; then
				vim -s nextOri_cfg.keys ${op}-ori_$((ori+1)).cfg
				if [ "$((ori+1))" -lt "${nOri}" ]; then
					cp ${op}-ori_$((ori+1)).cfg ${op}-ori_$((ori+2)).cfg
				fi
				mv ${op}-ori_$((ori+1)).cfg ${fdr0}
			fi
		fi
		jobList="$jobList:${jobID:20}"
	done
	
	sbatch --export=ALL --dependency=afterok$jobList plotTC.slurm
else
	sbatch --export=ALL plotTC.slurm
fi
